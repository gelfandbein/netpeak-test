---
## installs and sets up Mariadb
- name: Install MariaDB package
  apt: name={{ item }} state=latest
  with_items:
    - mariadb-server
    - python-mysqldb
    - python-pymysql

- name: Ensure MySQL is up-and-running
  service:
    name: mysql
    state: started
    enabled: yes

#- name: Create random password for root user
#  command: 'php -r "echo md5(random_bytes(10));"'
#  # ignore_errors: true
#  # no_log: true
#  register: mysql_root_password

    # 'localhost' needs to be the last item for idempotency, see
    # http://ansible.cc/docs/modules.html#mysql-user
- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }}
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost

- name: copy .my.cnf file with root password credentials
  template: src=templates/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600

- name: delete anonymous MySQL server user for $server_hostname
  action: mysql_user user="" host="{{ server_hostname }}" state="absent"

- name: delete anonymous MySQL server user for localhost
  action: mysql_user user="" state="absent"

- name: remove the MySQL test database
  action: mysql_db db=test state=absent

  # localhost needs to be the last item for idempotency
#- name: Update mysql root password for all root accounts
  # ignore_errors: true
  # no_log: true
#  mysql_user:
#      name: root
#      host: localhost
#      password: "{{ mysql_root_password }}"
#      priv: '*.*:ALL,GRANT'
#      check_implicit_admin: true
 # with_items:
#    - "{{ ansible_hostname }}"
#    - 127.0.0.1
#    - ::1
#    - localhost

- name: Detect and properly set root password
  stat:
    path: /root/.my.cnf
  register: r

# Now that the root password is set to the specified, make it default for the client.
- name: Copy my.cnf
  template:
    src: my.cnf.j2
    dest: /root/.my.cnf
    force: yes
    owner: root
    mode: 0600

#- mysql_user:
#    name: "{{ mysql_user }}"
#    password: "{{ mysql_password }}"
#    priv: "{{ mysql_database }}.*:ALL"
#    state: present

#- mysql_db:
#    name: "{{ mysql_database }}"
#    state: present

- name: Delete anonymous MySQL server user for server hostname
  action: mysql_user user="" host="{{ ansible_hostname }}" state="absent"

- name: Delete anonymous MySQL server user for localhost
  action: mysql_user user="" state="absent"

- name: Remove the MySQL test database
  action: mysql_db db=test state=absent

